[
  {
    "title": "Mandelbrot Set",
    "icon": "mandelbrot.png",
    "description": "Function of the Mandelbrot Set",
    "data": {
      "function": "mandelbrot(z, p)",
      "mandelinit": "0"
    }
  },
  {
    "title": "Burning Ship",
    "icon": "burningship.png",
    "description": "Function of the Mandelbrot Set using the absolute Value",
    "data": {
      "function": "mandelbrot(abs z, p)",
      "mandelinit": "0"
    }
  },
  {
    "title": "Wikipedia-Mandelbrot-Set",
    "icon": "wiki.png",
    "description": "Settings as they are used in Wikipedia",
    "data": {
      "bailoutvalue": "i + smooth_i",
      "bailouttransfer": "log(1 + value * (0.42 / 28))",
      "laketransfer": "0",
      "lakepalette": [["0xff000000"]],
      "bailoutpalette": [
          [
            "0xff000764",
            "0xff206bcb",
            "0xffedffff",
            "0xffffaa00",
            "0xff310231"
          ]
        ]
    }
  },
  {
    "title": "Celtic",
    "icon": "celtic.png",
    "description": "Celtic Fractal",
    "data": {
      "function": "rabs sqr z + p",
      "mandelinit": "0"
    }
  },
  {
    "title": "Tricorn",
    "icon": "tricorn.png",
    "description": "Tricorn Fractal",
    "data": {
      "function": "mandelbrot(conj z, p)",
      "mandelinit": "0"
    }
  },
  {
    "title": "Buffalo",
    "icon": "buffalo.png",
    "description": "Buffalo Fractal",
    "data": {
      "function": "abs sqr z + p",
      "mandelinit": "0"
    }
  },
  {
    "title": "Perpendicular Mandelbrot",
    "icon": "perpendicular_mandelbrot.png",
    "description": "Perpendicular Mandelbrot Fractal",
    "data": {
      "function": "mandelbrot(conj rabs z, p)",
      "mandelinit": "0"
    }
  },
  {
    "title": "Perpendicular Burning Ship",
    "icon": "perpendicular_burningship.png",
    "description": "Perpendicular Burning Ship Fractal",
    "data": {
      "function": "mandelbrot(iabs z, p)",
      "mandelinit": "0"
    }
  },
  {
    "title": "Perpendicular Celtic",
    "icon": "perpendicular_celtic.png",
    "description": "Perpendicular Celtic Fractal",
    "data": {
      "function": "conj rabs sqr z + p",
      "mandelinit": "0"
    }
  },
  {
    "title": "Perpendicular Buffalo",
    "icon": "perpendicular_buffalo.png",
    "description": "Perpendicular Buffalo Fractal",
    "data": {
      "function": "rabs sqr iabs z + p",
      "mandelinit": "0"
    }
  },
  {
    "title": "Mandel^3",
    "icon": "mandel3.png",
    "description": "Mandelbrot Set to the power of 3",
    "data": {
      "function": "z^3 + p",
      "max_power": "3",
      "mandelinit": "0"
    }
  },
  {
    "title": "Mandel^4",
    "icon": "mandel4.png",
    "description": "Mandelbrot Set to the power of 4",
    "data": {
      "function": "z^4 + p",
      "max_power": "4",
      "mandelinit": "0"
    }
  },
  {
    "title": "Lambda",
    "icon": "lambda.png",
    "description": "Lambda Fractal",
    "data": {
      "function": "p (1 - z) z",
      "mandelinit": "0.5"
    }
  },
  {
    "title": "Generic Lambda",
    "icon": "generic_lambda.png",
    "description": "Lambda Fractal with parameterized maximum power",
    "data": {
      "function": "p (1 - z^(max_power - 1)) z",
      "max_power": "4",
      "mandelinit": "/max_power ^ /(max_power - 1)"
    }
  },
  {
    "title": "Simonbrot Normal",
    "icon": "simonbrot_normal.png",
    "description": "Simonbrot Fractal, a combination of Mandelbrot and Burning Ship",
    "data": {
      "function": "sqr z abs z + p",
      "max_power": "4",
      "mandelinit": "0"
    }
  },
  {
    "title": "Simonbrot Inverted",
    "icon": "simonbrot_inverted.png",
    "description": "Simonbrot with abs/sqr exchanged",
    "data": {
      "function": "{ var t = sqr z; t * abs t } + p",
      "max_power": "4",
      "mandelinit": "0"
    }
  },
  {
    "title": "Phoenix Julia Set",
    "icon": "phoenix.png",
    "description": "Julia Set of the Phoenix Fractal",
    "data": {
      "function": "mandelbrot(z, p.x) + zlast p.y",
      "mandelinit": "c",
      "juliaset": "true",
      "juliapoint": "0.5666:-0.5"
    }
  },
  {
    "title": "Cczcpaczcp",
    "icon": "ccz-2.png",
    "description": "Special formula by Mark R Eggleston",
    "data": {
      "function": "p (alpha * z^beta + gamma * z^delta)",
      "mandelinit": "(-gamma delta / alpha beta)^/(beta - delta)",
      "max_power": "3",
      "alpha": "1",
      "beta": "3",
      "gamma": "1",
      "delta": "-1"
    }
  },
  {
    "title": "Glynn",
    "icon": "glynn.png",
    "description": "Glynn Fractal (Julia Set of z^1.75 + p)",
    "data": {
      "function": "z ^ 1.75 + p",
      "mandelinit": "0",
      "max_power": "1.75",
      "juliaset": "true",
      "juliapoint": "-0.4"
    }
  },
  {
    "title": "Magnet1",
    "icon": "magnet1.png",
    "description": "Magnet 1 Fractal",
    "data": {
      "function": "sqr((sqr z + p - 1) / (2 z + p - 2))",
      "mandelinit": "0"
    }
  },
  {
    "title": "Magnet2",
    "icon": "magnet2.png",
    "description": "Magnet 2 Fractal",
    "data": {
      "function": "sqr((z^3 + 3(p - 1)z + (p - 1)(p - 2)) / (3 sqr z + 3(p - 2)z + (p - 1)(p - 2) + 1))",
      "mandelinit": "0",
      "max_power": "4"
    }
  },
  {
    "title": "Mandelbrot Newton",
    "icon": "mandelnewton.png",
    "description": "Mix of Newton Set and Mandelbrot Formula",
    "data": {
      "function": "sqr newton(z^3 + p, z) + p",
      "mandelinit": "c"
    }
  },
  {
    "title": "SinhZ",
    "icon": "sinhz.png",
    "description": "Mandelbrot Set using the Sine Hyperbolicus (non-polynomial function)",
    "data": {
      "function": "sinh z * p",
      "mandelinit": "I",
      "bailout": "32"
    }
  },
  {
    "title": "CoshZ",
    "icon": "coshz.png",
    "description": "Mandelbrot Set using the Cosine Hyperbolicus (non-polynomial function)",
    "data": {
      "function": "cosh z * p",
      "mandelinit": "0",
      "bailout": "32"
    }
  },
      {
      "title": "Inverse Mandel^3",
      "icon": "recipmandel3.png",
      "description": "Fractal of z^-3 + p (lake only)",
      "data": {
      "Scale": ["2", "0", "0", "2", "-1.5", "0"],
      "function": "z^-3 + p",
      "mandelinit": "c"
      }
      },
      {
      "title": "Duck Fractal",
      "icon": "duck.png",
      "description": "Fractal of a logarithmic function",
      "data": {
      "Scale": ["2", "0", "0", "2", "-1.5", "0"],
      "function": "log(iabs z + p)",
      "mandelinit": "c"
      }
      },
      {
      "title": "Newton Set of Power 3",
      "icon": "newton3.png",
      "description": "Newton Set of z^3 + p",
      "data": {
      "function": "newton(z^3 + p, z)",
      "mandelinit": "c"
      }
      },
      {
      "title": "Newton Set of Power 4",
      "icon": "newton4.png",
      "description": "Newton of z^4 - 6 * z^2 - 2 p z + p",
      "data": {
      "function": "newton(z^4 - 6 * z^2 - 2 p z + p, z)",
      "mandelinit": "-1"
      }
      },
      {
      "title": "Newton Set of Sine Hyperbolicus",
      "icon": "newtonsinh.png",
      "description": "Newton of sinh z + p",
      "data": {
      "function": "newton(sinh z + p, z)",
      "mandelinit": "0"
      }
      },
      {
      "title": "Nova Fractal of Power 3",
      "icon": "nova3.png",
      "description": "Variation of Newton Fractal",
      "data": {
      "function": "newton(z^3 - 1, z) + p",
      "mandelinit": "1"
      }
      },
      {
      "title": "Generic Nova Fractal",
      "icon": "nova34.png",
      "description": "",
      "data": {
      "function": "z - R (z^power - 1) / derive(z^4 - 1, z) + p",
      "mandelinit": "0",
      "R": "3",
      "power": "4"
      }
      },
      {
      "title": "Curvature Inequality",
      "icon": "curvature.png",
      "description": "Branching Addend",
      "data": {
      "addend": "arcnorm((znext - z) / (z - zlast))"
      }
      },
      {
      "title": "Triange Inequality",
      "icon": "triangleinequality.png",
      "description": "Triange Inequality",
      "data": {
      "addend": "{ var t1 = rad z ^ max_power, t2 = rad p, M = abs(t1 - t2), m = t1 + t2; (rad znext - m) / (M - m) }"
      }
      },
      {
          "title": "Gaussian Integer Min",
          "icon": "gaussianintmin.png",
          "description": "Minimum distance to a gaussian integer (fold)",
          "data": {
              "foldfn": "min(dist(znext, floor(znext + 0.5:0.5)), foldvalue)",
              "bailoutvalue": "foldvalue.x",
              "lakevalue": "foldvalue.x"
          }
      },
      {
          "title": "Gaussian Integer Max",
          "icon": "gaussianintmax.png",
          "description": "Maximum distance to a gaussian integer (fold)",
          "data": {
              "foldfn": "max(dist(znext, floor(znext + 0.5:0.5)), foldvalue)",
              "bailoutvalue": "foldvalue.x",
              "lakevalue": "foldvalue.x"
          }
      },
      {
          "title": "Gaussian Integer Mixed",
          "icon": "gaussianinttwofold.png",
          "description": "Minimum (bailout) and maximum (lake) distance to a gaussian integer (two-fold",
          "data": {
              "foldfn": "min(dist(znext, floor(znext + 0.5:0.5)), foldvalue)",
              "foldinit2": "0",
              "foldfn2": "max(dist(znext, floor(znext + 0.5:0.5)), foldvalue2)"
          }
      },
      {
          "title": "Distance Estimation (Mandelbrot",
          "icon": "distance_estimation.png",
          "description": "Distance estimation for the mandelbrot set (fold)",
          "data": {
              "foldfn": "2 znext foldvalue + 1",
              "bailoutvalue": "rad znext / rad foldvalue / 2 * log rad znext"
          }
      },
      {
          "title": "Exponential Smoothing (Bailout and Lake)",
          "icon": "expsmooth.png",
          "description": "Exponential Smoothing for bailout and lake (fold)",
          "data": {
              "foldfn": "/cosh(rad znext + /dist(znext, z)) + foldvalue",
              "bailoutvalue": "log(E^2 + foldvalue.x)",
              "lakevalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Exponential Smoothing (Bailout",
          "icon": "expsmoothbailout.png",
          "description": "Exponential Smoothing for bailout (fold",
          "data": {
              "foldfn": "/cosh rad znext + foldvalue",
              "bailoutvalue": "log(E^2 + foldvalue.x"
          }
      },
      {
          "title": "Exponential Smoothing (Lake)",
          "icon": "expsmoothlake.png",
          "description": "Exponential Smoothing for lake",
          "data": {
              "foldfn": "/cosh(/dist(znext, z)) + foldvalue",
              "lakevalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Exponential Smoothing (Two Fold)",
          "icon": "expsmoothtwofold.png",
          "description": "Exponential Smoothing for bailout (first fold) and lake (second fold)",
          "data": {
              "foldfn": "/cosh rad znext + foldvalue",
              "bailoutvalue": "log(E^2 + foldvalue.x)",
              "foldfn2": "/cosh(/dist(znext, z)) + foldvalue2",
              "lakevalue": "log(1 + foldvalue2.x)"
          }
      },
   
      {
          "title": "Smooth Drawing (Lake)",
          "icon": "smoothlake.png",
          "description": "Smooth drawing for the lake based on atan (fold)",
          "data": {
              "foldfn": "dist(znext, z) + foldvalue",
              "lakevalue": "1.3 atan foldvalue.x / PI"
          }
      },
      {
          "title": "Fold-Branching (Bailout and Lake",
          "icon": "foldbranching.png",
          "description": "Branching for fold for bailout and lake",
          "data": {
              "foldfn": "(0.5 + 0.5 cos 6 arc (z - znext)) / (12 + rad znext + /dist(znext, z)) + foldvalue",
              "bailoutvalue": "log(1 + foldvalue.x)",
              "lakevalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Fold-Branching (Bailout)",
          "icon": "foldbranchingbailout.png",
          "description": "Branching for fold for bailout (fold)",
          "data": {
              "foldfn": "(0.5 + 0.5 cos 6 arc znext) / (12 + rad znext) + foldvalue",
              "bailoutvalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Fold-Geometry Pattern (Bailout)",
          "icon": "foldgeometrybailout.png",
          "description": "Branching for fold for bailout (fold)",
          "data": {
              "foldfn": "/line(0:0, 1:0, znext) + foldvalue",
              "bailoutvalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Fold-Branching (Lake",
          "icon": "foldbranchinglake.png",
          "description": "Branching for fold for lake (fold)",
          "data": {
              "foldfn": "(0.5 + 0.5 cos 6 arc(z - znext)) / (12 + /dist(znext, z)) + foldvalue",
              "lakevalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Fold-Branching Alternative (Lake)",
          "icon": "foldbranchinglake2.png",
          "description": "Branching based on atan for fold for lake (fold)",
          "data": {
              "foldfn": "(0.5 + 0.5 cos 4 arc(z - znext)) * (1 - 2 atan(12 + /dist(znext, z)) / PI) + foldvalue",
              "lakevalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Fold-Geometry Pattern (Lake)",
          "icon": "foldgeometrylake.png",
          "description": "Branching for fold for bailout (fold)",
          "data": {
              "foldfn": "/line(0:0, 1:0, /(znext - z)) + foldvalue",
              "lakevalue": "log(1 + foldvalue.x)"
          }
      },
      {
          "title": "Fold-Branching (Two Fold)",
          "icon": "foldbranchingtwofold.png",
          "description": "Branching for bailout (first fold) and lake (second fold) (two fold)",
          "data": {
              "foldfn": "(0.5 + 0.5 cos 6 arc znext) / (12 + rad znext) + foldvalue",
              "foldfn2": "(0.5 + 0.5 cos 6 arc(z - znext)) / (12 + /dist(znext, z)) + foldvalue2",
              "bailoutvalue": "log(1 + foldvalue.x)",
              "lakevalue": "log(1 + foldvalue2.x)"
          }
      },
      {
          "title": "Exponential Smoothing and Branching (Two Fold)",
          "icon": "twofoldexpsmoothbranch.png",
          "description": "Combination of exponential smoothing and branching (two fold)",
          "data": {
              "foldfn": "/cosh(rad znext + /dist(znext, z)) + foldvalue",
              "foldfn2": "(0.5 + 0.5 cos 6 arc (z - znext)) / (12 + rad znext + /dist(znext, z)) + foldvalue2",
              "bailoutvalue": "log(E^2 + foldvalue.x + foldvalue2.x)",
              "lakevalue": "log(1 + foldvalue.x + foldvalue2.x)",
              "bailouttransfer": "log(1 + foldvalue2.x) : value",
              "laketransfer": "log(1 + foldvalue2.x) : value"
          }
      },
      {
          "title": "Cross Trap",
          "icon": "crosstrap.png",
          "description": "Orbit Trap of a centered cross",
          "data": {
              "trapfn": "min(line(0:0, 1:0, znext), line(0:0, 0:1, znext)"
          }
      },
      {
          "title": "Two Boxes Trap",
          "icon": "twoboxestrap.png",
          "description": "Orbit Trap of two boxes",
          "data": {
              "trapfn": "min(box(-2:-2, 0.5:0.5, znext), box(2:2, -0.5:-0.5, znext))"
          }
      },
      {
          "title": "Steiner Circles Trap",
          "icon": "steinertrap.png",
          "description": "Orbit Trap of 6 Steiner Circles",
          "data": {
              "trapfn": "min(circle(0:0, 3, znext), circle(-2:0, 1, znext), circle(2:0, 1, znext), circle(-1:-1.73205, 1, znext), circle(-1:1.73205, 1, znext), circle(1:-1.73205, 1, znext), circle(1:1.73205, 1, znext))"
          }
      },      
      {
      "title": "Min/Max Neighbors",
      "icon": "minmaxneighbor.png",
      "description": "Orbit trap determining the distance of neighbors in the orbit",
      "data": {
      "trapfn": "dist(znext, z)"
      }
      },
      {
      "title": "Min/Max Gaussian Integer",
      "icon": "minmaxgaussianint.png",
      "description": "Orbit trap determining the distance to the next gaussian integer",
      "data": {
      "trapfn": "dist(znext, floor(znext + 0.5:0.5))"
      }
      },
      {
      "title": "BA-Lyapunov Fractal",
      "icon": ".png",
      "description": "Edge of BA-Lyapunov Fractal",
      "data": {
      "Scale": {
      "type": "scale",
      "value": ["1", "0", "0", "-1", "3", "3"]
      },
      "lyastring": "[b,a]"
      }
      },
      {
      "title": "BBABA-Lyapunov Fractal",
      "icon": "lyapunovbbaba.png",
      "description": "Edge of BBABA-Lyapunov Fractal",
      "data": {
      "Scale": ["-1", "0", "0", "-1", "3", "3"],
      "lyastring": "[b,b,a,b,a]"
      }
      },
      {
      "title": "Zirkony Zity",
      "icon": "zirkony.png",
      "description": "Part of Lyapunov fractal called Zirkony Zity",
      "data": {
      "Scale": ["0.45", "0", "0", "-0.3", "3.05", "3.7"],
      "lyastring": "[a,a,a,a,a,a,b,b,b,b,b,b]"
      }
      },
      {
      "title": "Domain Coloring",
      "icon": "domain.png",
      "description": "Domain Coloring for Complex Functions",
      "data": {
        "transfer": "arcnorm z : (0.6 fract (log rad z / log 2) + 0.0667)"
      }
    }
]
